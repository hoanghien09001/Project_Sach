// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SachAPI.DataContext;

#nullable disable

namespace SachAPI.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SachAPI.Entities.ChiTietNhap", b =>
                {
                    b.Property<int>("ChiTietNhapID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChiTietNhapID"), 1L, 1);

                    b.Property<int>("HoaDonNhapSachID")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayXuatBan")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SachID")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TacGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenSach")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TheLoaiSachID")
                        .HasColumnType("int");

                    b.HasKey("ChiTietNhapID");

                    b.HasIndex("HoaDonNhapSachID");

                    b.HasIndex("SachID");

                    b.HasIndex("TheLoaiSachID");

                    b.ToTable("chiTietNhaps");
                });

            modelBuilder.Entity("SachAPI.Entities.ChiTietSach", b =>
                {
                    b.Property<int>("ChiTietSachID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChiTietSachID"), 1L, 1);

                    b.Property<int>("KeSachID")
                        .HasColumnType("int");

                    b.Property<int>("SachID")
                        .HasColumnType("int");

                    b.Property<int>("TrangThaiSachID")
                        .HasColumnType("int");

                    b.HasKey("ChiTietSachID");

                    b.HasIndex("KeSachID");

                    b.HasIndex("SachID");

                    b.HasIndex("TrangThaiSachID");

                    b.ToTable("chiTietSachs");
                });

            modelBuilder.Entity("SachAPI.Entities.ChiTietThue", b =>
                {
                    b.Property<int>("ChiTietThueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChiTietThueId"), 1L, 1);

                    b.Property<int>("ChiTietSachID")
                        .HasColumnType("int");

                    b.Property<int>("HoaDonThueSachID")
                        .HasColumnType("int");

                    b.Property<int?>("KhachHangID")
                        .HasColumnType("int");

                    b.Property<int?>("NhanVienID")
                        .HasColumnType("int");

                    b.Property<int>("ThoiGianThue")
                        .HasColumnType("int");

                    b.HasKey("ChiTietThueId");

                    b.HasIndex("ChiTietSachID");

                    b.HasIndex("HoaDonThueSachID");

                    b.HasIndex("KhachHangID");

                    b.HasIndex("NhanVienID");

                    b.ToTable("chiTietThues");
                });

            modelBuilder.Entity("SachAPI.Entities.HoaDonNhapSach", b =>
                {
                    b.Property<int>("HoaDonNhapSachID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HoaDonNhapSachID"), 1L, 1);

                    b.Property<DateTime>("NgayNhap")
                        .HasColumnType("datetime2");

                    b.Property<int>("NhanVienID")
                        .HasColumnType("int");

                    b.HasKey("HoaDonNhapSachID");

                    b.HasIndex("NhanVienID");

                    b.ToTable("hoaDonNhapSachs");
                });

            modelBuilder.Entity("SachAPI.Entities.HoaDonThueSach", b =>
                {
                    b.Property<int>("HoaDonThueSachID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HoaDonThueSachID"), 1L, 1);

                    b.Property<int>("KhachHangID")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayThue")
                        .HasColumnType("datetime2");

                    b.Property<int>("NhanVienID")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<double>("TongTien")
                        .HasColumnType("float");

                    b.HasKey("HoaDonThueSachID");

                    b.HasIndex("KhachHangID");

                    b.HasIndex("NhanVienID");

                    b.ToTable("hoaDonThueSachs");
                });

            modelBuilder.Entity("SachAPI.Entities.KeSach", b =>
                {
                    b.Property<int>("KeSachID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KeSachID"), 1L, 1);

                    b.Property<string>("TenKeSach")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KeSachID");

                    b.ToTable("keSachs");
                });

            modelBuilder.Entity("SachAPI.Entities.KhachHang", b =>
                {
                    b.Property<int>("KhachHangID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KhachHangID"), 1L, 1);

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KhachHangID");

                    b.ToTable("khachHangs");
                });

            modelBuilder.Entity("SachAPI.Entities.NhanVien", b =>
                {
                    b.Property<int>("NhanVienID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NhanVienID"), 1L, 1);

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuyenHanID")
                        .HasColumnType("int");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNhanVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NhanVienID");

                    b.HasIndex("QuyenHanID");

                    b.ToTable("nhanViens");
                });

            modelBuilder.Entity("SachAPI.Entities.QuyenHan", b =>
                {
                    b.Property<int>("QuyenHanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuyenHanId"), 1L, 1);

                    b.Property<string>("TenQuyenHan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuyenHanId");

                    b.ToTable("quyenHans");
                });

            modelBuilder.Entity("SachAPI.Entities.Sach", b =>
                {
                    b.Property<int>("SachID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SachID"), 1L, 1);

                    b.Property<double>("GiaChoThue")
                        .HasColumnType("float");

                    b.Property<DateTime>("NgayXuatBan")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TacGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenSach")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TheLoaiSachID")
                        .HasColumnType("int");

                    b.HasKey("SachID");

                    b.HasIndex("TheLoaiSachID");

                    b.ToTable("sachs");
                });

            modelBuilder.Entity("SachAPI.Entities.TheLoaiSach", b =>
                {
                    b.Property<int>("TheLoaiSachID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TheLoaiSachID"), 1L, 1);

                    b.Property<string>("TenLoaiSach")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TheLoaiSachID");

                    b.ToTable("theLoaiSachs");
                });

            modelBuilder.Entity("SachAPI.Entities.TrangThaiSach", b =>
                {
                    b.Property<int>("TrangThaiSachID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrangThaiSachID"), 1L, 1);

                    b.Property<string>("TenTrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TrangThaiSachID");

                    b.ToTable("trangThaiSachs");
                });

            modelBuilder.Entity("SachAPI.Entities.ChiTietNhap", b =>
                {
                    b.HasOne("SachAPI.Entities.HoaDonNhapSach", "HoaDonNhapSach")
                        .WithMany("ChiTietNhaps")
                        .HasForeignKey("HoaDonNhapSachID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SachAPI.Entities.Sach", "Sach")
                        .WithMany("ChiTietNhaps")
                        .HasForeignKey("SachID");

                    b.HasOne("SachAPI.Entities.TheLoaiSach", "TheLoaiSach")
                        .WithMany("ChiTietNhaps")
                        .HasForeignKey("TheLoaiSachID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDonNhapSach");

                    b.Navigation("Sach");

                    b.Navigation("TheLoaiSach");
                });

            modelBuilder.Entity("SachAPI.Entities.ChiTietSach", b =>
                {
                    b.HasOne("SachAPI.Entities.KeSach", "KeSach")
                        .WithMany("ChiTietSach")
                        .HasForeignKey("KeSachID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SachAPI.Entities.Sach", "Sach")
                        .WithMany("ChiTietSachs")
                        .HasForeignKey("SachID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SachAPI.Entities.TrangThaiSach", "TrangThaiSachs")
                        .WithMany("ChiTietSachs")
                        .HasForeignKey("TrangThaiSachID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KeSach");

                    b.Navigation("Sach");

                    b.Navigation("TrangThaiSachs");
                });

            modelBuilder.Entity("SachAPI.Entities.ChiTietThue", b =>
                {
                    b.HasOne("SachAPI.Entities.ChiTietSach", "ChiTietSach")
                        .WithMany("ChiTietThues")
                        .HasForeignKey("ChiTietSachID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SachAPI.Entities.HoaDonThueSach", "HoaDonThueSach")
                        .WithMany("ChiTietThues")
                        .HasForeignKey("HoaDonThueSachID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SachAPI.Entities.KhachHang", null)
                        .WithMany("ChiTietThues")
                        .HasForeignKey("KhachHangID");

                    b.HasOne("SachAPI.Entities.NhanVien", null)
                        .WithMany("ChiTietThues")
                        .HasForeignKey("NhanVienID");

                    b.Navigation("ChiTietSach");

                    b.Navigation("HoaDonThueSach");
                });

            modelBuilder.Entity("SachAPI.Entities.HoaDonNhapSach", b =>
                {
                    b.HasOne("SachAPI.Entities.NhanVien", "NhanVien")
                        .WithMany()
                        .HasForeignKey("NhanVienID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("SachAPI.Entities.HoaDonThueSach", b =>
                {
                    b.HasOne("SachAPI.Entities.KhachHang", "KhachHang")
                        .WithMany()
                        .HasForeignKey("KhachHangID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SachAPI.Entities.NhanVien", "NhanVien")
                        .WithMany()
                        .HasForeignKey("NhanVienID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("SachAPI.Entities.NhanVien", b =>
                {
                    b.HasOne("SachAPI.Entities.QuyenHan", "QuyenHan")
                        .WithMany("NhanViens")
                        .HasForeignKey("QuyenHanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuyenHan");
                });

            modelBuilder.Entity("SachAPI.Entities.Sach", b =>
                {
                    b.HasOne("SachAPI.Entities.TheLoaiSach", "TheLoaiSach")
                        .WithMany("Sachs")
                        .HasForeignKey("TheLoaiSachID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TheLoaiSach");
                });

            modelBuilder.Entity("SachAPI.Entities.ChiTietSach", b =>
                {
                    b.Navigation("ChiTietThues");
                });

            modelBuilder.Entity("SachAPI.Entities.HoaDonNhapSach", b =>
                {
                    b.Navigation("ChiTietNhaps");
                });

            modelBuilder.Entity("SachAPI.Entities.HoaDonThueSach", b =>
                {
                    b.Navigation("ChiTietThues");
                });

            modelBuilder.Entity("SachAPI.Entities.KeSach", b =>
                {
                    b.Navigation("ChiTietSach");
                });

            modelBuilder.Entity("SachAPI.Entities.KhachHang", b =>
                {
                    b.Navigation("ChiTietThues");
                });

            modelBuilder.Entity("SachAPI.Entities.NhanVien", b =>
                {
                    b.Navigation("ChiTietThues");
                });

            modelBuilder.Entity("SachAPI.Entities.QuyenHan", b =>
                {
                    b.Navigation("NhanViens");
                });

            modelBuilder.Entity("SachAPI.Entities.Sach", b =>
                {
                    b.Navigation("ChiTietNhaps");

                    b.Navigation("ChiTietSachs");
                });

            modelBuilder.Entity("SachAPI.Entities.TheLoaiSach", b =>
                {
                    b.Navigation("ChiTietNhaps");

                    b.Navigation("Sachs");
                });

            modelBuilder.Entity("SachAPI.Entities.TrangThaiSach", b =>
                {
                    b.Navigation("ChiTietSachs");
                });
#pragma warning restore 612, 618
        }
    }
}
